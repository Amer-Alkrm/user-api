version: "2"

services:
  user-api-base:
    build:
      context: .
    container_name: user-api-base
    volumes:
      - .:/app
    ports:
      - "80"
    environment:
      - VIRTUAL_HOST=userapi.docker
      # Postgres connectivity
      - DB_USER_NAME=users
      - DB_PASSWORD=password
      - DB_HOST=users-postgres
      - DB_PORT=5432
      - DB_NAME=users
      # Authentication Variables
      - SECRET_KEY=cf7b9d67329937d73f306f43f4523442d945d6c9119d6f8baf2e83d1ed34b9d7
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=15
      #Logging Variable
      - LOG_LEVEL=DEBUG
      #Default Stakeholder
      - DEF_EMAIL=user@gmail.com
      - DEF_PASS=password
      - DEF_ADMIN=1
    command: ["echo", "I only exist to be extended so I'll just exit, thanks"]

  user-api-service:
    extends: user-api-base
    container_name: userapi
    depends_on:
      - users-postgres
      - users-redis
    environment:
      #Redis Env
      - REDIS_HOST=users-redis
      - REDIS_PORT=6379
    command: bin/boot.sh

  users-postgres:
    container_name: users-postgres
    image: postgres:12.5
    environment:
      VIRTUAL_HOST: users-postgres.docker
      POSTGRES_DB: users
      POSTGRES_USER: users
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"

  users-redis:
    container_name: users-redis
    image: redis:6.2.6-alpine
    ports:
      - "6380:6379"

  users-redis-test:
    container_name: users-redis-test
    image: redis:6.2.6-alpine
    ports:
      - "6381:6379"

  user-api-test:
    extends: user-api-base
    container_name: user-api-pytest
    depends_on:
      - users-postgres
      - users-redis-test
    environment:
      #Redis Env
      - REDIS_HOST=users-redis-test
      - REDIS_PORT=6379
    command: bin/unit_test.sh

  user-api-stakeholdersjob:
    extends: user-api-base
    container_name: user-api-stakeholdersjob
    depends_on:
      - users-postgres
    command: ["python", "app/jobs/stakeholderjob.py"]
